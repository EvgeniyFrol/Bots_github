import telebot
import config
import random


bot = telebot.TeleBot(config.BOT_TOKEN)

@bot.message_handler(commands=['start'])
def start(message):
    sticker = open('hello.tgs', 'rb')
    bot.send_sticker(message.chat.id, sticker)

    marcup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = telebot.types.KeyboardButton('üé∞ –ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ—é —É–¥–∞—á—É!')
    item2 = telebot.types.KeyboardButton('üòÉ –ö–∞–∫ –¥–µ–ª–∞?')

    marcup.add(item1, item2)

    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n'
                                      '–Ø - <b>{1.first_name}</b> –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –Ω–µ–º–Ω–æ–∂–µ—á–∫–æ! –î–∞–≤–∞–π –ø—Ä–æ—Ç–µ—Å—Ç–∏–º!'
                     .format(message.from_user, bot.get_me()), parse_mode='html', reply_markup=marcup)


@bot.message_handler(content_types=['text'])
def echo(message):
    if message.chat.type == 'private':
        if message.text == 'üé∞ –ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ—é —É–¥–∞—á—É!':
            user_num = random.randint(1, 10)
            my_num = random.randint(1, 10)
            bot.send_message(message.chat.id, f'–£ —Ç–µ–±—è –≤—ã–ø–∞–ª–æ {str(user_num)}')
            bot.send_message(message.chat.id, f'–£ –º–µ–Ω—è –≤—ã–ø–∞–ª–æ {str(my_num)}')
            if user_num > my_num:
                bot.send_message(message.chat.id, '–ü—Ä–æ—Å—Ç–æ –ø–æ–≤–µ–∑–ª–æ!')
                sticker = open('fuck.tgs', 'rb')
                bot.send_sticker(message.chat.id, sticker)
            elif user_num == my_num:
                bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ! –í–æ—Ç —ç—Ç–æ —É–¥–∞—á–∞!')
                sticker = open('—Ç—â_—Ü—Ñ–Ω.tgs', 'rb')
                bot.send_sticker(message.chat.id, sticker)
            else:
                bot.send_message(message.chat.id, '–Ø –ø–æ–±–µ–¥–∏–ª! –ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è. –ü–æ–≤–µ–∑–µ—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑')
                sticker = open('oueeeee.tgs', 'rb')
                bot.send_sticker(message.chat.id, sticker)
        elif message.text == 'üòÉ –ö–∞–∫ –¥–µ–ª–∞?':
            marcup = telebot.types.InlineKeyboardMarkup(row_width=2)
            item1 = telebot.types.InlineKeyboardButton('–•–æ—Ä–æ—à–æ', callback_data='good')
            item2 = telebot.types.InlineKeyboardButton('–ù–µ –æ—á–µ–Ω—å', callback_data='bad')

            marcup.add(item1, item2)

            bot.send_message(message.chat.id, '–ü–æ—Ç–∏—Ö–æ–Ω–µ—á–∫—É) –ö–∞–∫ —Å–∞–º?', reply_markup=marcup)
        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é, —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å! –î–∞–≤–∞–π —Å–º–µ–Ω–∏–º —Ç–µ–º—É)')


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                sticker = open('cool.tgs', 'rb')
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ —Å–ª–∞–≤–Ω–µ–Ω–µ–Ω—å–∫–æ!')
                bot.send_sticker(call.message.chat.id, sticker)
            elif call.data == 'bad':
                sticker = open('plumbus.tgs', 'rb')
                bot.send_message(call.message.chat.id, '–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π! –í–æ—Ç —Ç–µ–±–µ –ø–ª—é–º–±—É—Å –Ω–∞ —É–¥–∞—á—É)')
                bot.send_sticker(call.message.chat.id, sticker)

            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text='–¢—É—Ç –±—ã–ª –∫–∞–∫–æ–π —Ç–æ –≤–æ–ø—Ä–æ—Å, –∏–ª–∏ —Ç–µ–±–µ –ø–æ–∫–∞–∑–∞–ª–æ—Å—å?)))',
                reply_markup=None
            )

            bot.answer_callback_query(callback_query_id=call.id, show_alert=True, text='–¢—ã –ø—Ä–æ—Å—Ç–æ –¥—É—à–∫–∞!!!')

    except Exception as e:
        print(repr(e))


bot.polling(none_stop=True)
